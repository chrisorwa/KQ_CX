=ROUND(IFERROR(IFERROR(MINUTE(M2-O2),CONVERT((O2-M2),"day","min")*-1), "Unknown"),1)

<iframe height="400" width="100%" frameborder="no" src="https://datasciencegenie.shinyapps.io/MyShinyApp/"> </iframe>

# geocode the addresses
lat_longs <- kq %>%
  geocode(TO, method = 'osm', lat = latitude , long = longitude) 

lat_longs <- lat_longs %>% 
  filter(STATUS != 'Unknown' & DEP_DIFF != 'Unknown') %>% 
  filter_at(vars(latitude), all_vars(!is.na(.))) %>% 
  filter(STATUS != 'Canceled') %>% 
  filter(as.numeric(DEP_DIFF) > -50)
  
distance <- c()
for(i in 1:nrow(lat_longs)){
  position <- c(lat_longs$latitude[i],lat_longs$longitude[i])
  distance <- c(distance,haversine(jkia,position))
  print(i)
}

lat_longs$DISTANCE <- distance

lat_longs <- lat_longs %>% 
  mutate( REGION = case_when(TO  %in% c("Mombasa (MBA)", "Eldoret (EDL)", "Kisumu (KIS)", "Malindi (MYD)", "Ukunda (UKA)", "Lamu (LAU)")  ~ "Local" ,
                             TO  %in% c("Entebbe (EBB)", "Kigali (KGL)", "Addis Ababa (ADD)", "Mogadishu (MGQ)", "Juba (JUB)", "Kilimanjaro (JRO)", "Zanzibar (ZNZ)", "Ukunda (UKA)", "Kinshasa (FIH)", "Bujumbura (BJM)")  ~ "Regional",
                             TRUE ~ 'International'),
          TYPE = case_when(str_detect(AIRLINE,"Kenya") ~ "Kenya Airways",
                           TRUE ~ 'Other'),
          FLY = case_when(str_detect(AIRLINE,"Cargo") ~ "Cargo",
                          TRUE ~ 'Passenger'),
          color = case_when(TYPE == "Kenya Airways" ~ "red",
                            TRUE ~  "blue"))
#==================================================================================================================

#========================= Distance ==========================================
theme_538 <- function(base_size = 12, base_family = "Century Gothic") {
  theme_grey(base_size = base_size, base_family = base_family) %+replace%
    theme(
      # drop minor gridlines and axis-ticks
      panel.grid.minor = element_blank(),
      axis.ticks = element_blank(),
      
      # change font elements/family
      text = element_text(family = "Century Gothic", size = base_size),
      axis.text = element_text(face = "bold", color = "grey", size = base_size),
      axis.title = element_text(face = "bold", size = rel(1.33)),
      axis.title.x = element_text(margin = margin(0.5, 0, 0, 0, unit = "cm")),
      axis.title.y = element_text(margin = margin(0, 0.5, 0, 0, unit = "cm"), angle =90),
      plot.title = element_text(face = "bold", size = rel(1.67), hjust = 0),
      plot.title.position = "plot",
      plot.subtitle = element_text(size = 16, margin = margin(0.2, 0, 1, 0, unit = "cm"), hjust = 0),
      plot.caption = element_text(size = 10, margin = margin(1, 0, 0, 0, unit = "cm"), hjust = 1),
      # change plot colors for the background/panel elements
      plot.background = element_rect(fill = "#f0f0f0", color = NA),
      panel.background = element_rect(fill = "#f0f0f0", color = NA),
      panel.grid.major =  element_line(color = "#d0d0d0"),
      panel.border = element_blank(),
      # shrinks margin and simplify the strip/facet elements
      plot.margin = margin(0.5, 1, 0.5, 1, unit = "cm"),
      strip.background = element_blank(),
      strip.text = element_text(size = rel(1.33), face = "bold")
    )
}

# create a tiny dataset
playoff_label_scatter <- tibble(
  differential = c(20,-20), y = c(200, 800), 
  label = c("In Time", "Delayed"),
  color = c("#D50A0A", "#013369")
)

playoff_diff_plot <- lat_longs %>% 
  ggplot(aes(x = as.numeric(DEP_DIFF), y = DISTANCE)) +
  geom_vline(xintercept = 0, size = 0.75, color = "#737373") +
  geom_hline(yintercept = 864, size = 0.75, color = "#737373") +
  geom_point(
    aes(color = I(color)),
    size = 3, alpha = 0.8
  ) +
  ggtext::geom_richtext(
    data = playoff_label_scatter,
    aes(x = differential, y = y, label = label, color = I(color)),
    fill = "#f0f0f0", label.color = NA, # remove background and outline
    label.padding = grid::unit(rep(0, 4), "pt"), # remove padding
    family = "Roboto Black", hjust = 0.1, fontface = "bold",
    size = 8
  ) +
  labs(x = "Points Differential", y = "Win Percent",
       title = "Playoff teams typically have a positive point differential",
       subtitle = "Data through week 17 of the 2020 NFL Season",
       caption = str_to_upper("Plot: @thomas_mock | Data: ESPN")) +
  scale_y_continuous(
    labels = scales::percent_format(accuracy = 1),
    breaks = seq(.0, 1, by = .20)
  ) +
  scale_x_continuous(
    breaks = seq(-200, 250, by = 50)
  ) +
  theme_538()
playoff_diff_plot




#============================== cancellation =====================
cancellation <- kq %>% 
                    mutate( REGION = case_when(TO  %in% c("Mombasa (MBA)", "Eldoret (EDL)", "Kisumu (KIS)", "Malindi (MYD)", "Ukunda (UKA)", "Lamu (LAU)")  ~ "Local" ,
                                 TO  %in% c("Entebbe (EBB)", "Kigali (KGL)", "Addis Ababa (ADD)", "Mogadishu (MGQ)", "Juba (JUB)", "Kilimanjaro (JRO)", "Zanzibar (ZNZ)", "Ukunda (UKA)", "Kinshasa (FIH)", "Bujumbura (BJM)")  ~ "Regional",
                                 TRUE ~ 'International'),
                    TYPE = case_when(str_detect(AIRLINE,"Kenya") ~ "Kenya Airways",
                               TRUE ~ 'Other'),
                    FLY = case_when(str_detect(AIRLINE,"Cargo") ~ "Cargo",
                              TRUE ~ 'Passenger')) %>% 
                  filter(STATUS != 'Unknown' & DEP_DIFF != 'Unknown') %>% 
                  filter(FLY != 'Cargo') %>% 
                  filter(STATUS %in% c('Departed','Canceled')) %>% 
                  group_by(DATE,TYPE) %>% 
                  summarise(DEPARTED = sum(STATUS == 'Departed'),
                            CANCELED =  sum(STATUS == 'Canceled'),
                            TOTAL =  n(),
                            RATE = (CANCELED/TOTAL))



ggplot(cancellation, aes(x=as.Date(DATE), y=as.numeric(RATE))) + 
  geom_line(aes(y = DEPARTED), color = "darkred") + 
  geom_line(aes(y = CANCELED), color="steelblue") +
  facet_grid(. ~ TYPE)
  labs(x = "Date", y = "Cancellation Rate \n",
       title = "Departure Delays at JKIA",
       subtitle = "Comparison of KQ & Other Flights",
       caption = str_to_upper("Data Source: flightradar24.com")) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1))


#============================= run ===========================================

# Run the application 
shinyApp(ui = ui, server = server)